{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/posts/post-create/mime-type.validator.ts","webpack:///./src/app/posts/post-create/post-create.component.css","webpack:///./src/app/posts/post-create/post-create.component.html","webpack:///./src/app/posts/post-create/post-create.component.ts","webpack:///./src/app/posts/post-list/post-list.component.html","webpack:///./src/app/posts/post-list/post-list.component.ts","webpack:///./src/app/posts/post.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\nimport { LoginComponent } from \"./auth/login/login.component\";\nimport { SignupComponent } from \"./auth/signup/signup.component\";\nimport { AuthGuard } from \"./auth/auth.guard\";\n\nconst routes: Routes = [\n  { path: \"\", component: PostListComponent },\n  { path: \"create\", component: PostCreateComponent, canActivate: [AuthGuard] },\n  {\n    path: \"edit/:postId\",\n    component: PostCreateComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignupComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule {}\n","module.exports = \"main{\\r\\n  width: 80%;\\r\\n  margin: 1rem auto;\\r\\n}\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7Q0FDbkI7QUFDRDtFQUNFLGFBQWE7Q0FDZCIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWlue1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiAxcmVtIGF1dG87XHJcbn1cclxubWF0LXNwaW5uZXJ7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<app-header></app-header>\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"./auth/auth.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n  title = \"mean-app\";\n  constructor(private authService: AuthService) {}\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatProgressBar,\n  MatProgressSpinnerModule,\n  MatPaginatorModule\n} from \"@angular/material\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\n\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\nimport { LoginComponent } from \"./auth/login/login.component\";\nimport { SignupComponent } from \"./auth/signup/signup.component\";\nimport { AuthInterceptor } from \"./auth/auth-interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent,\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    FormsModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n  intercept(req: HttpRequest<any>, next) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set(\"authorization\", \"Bearer \" + authToken)\r\n    });\r\n\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from \"@angular/router\";\r\n\r\nimport { Observable } from \"rxjs\";\r\nimport { promise } from \"protractor\";\r\nimport { AuthService } from \"./auth.service\";\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.getAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate([\"/\"]);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AuthData } from \"./auth-data.model\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthService {\r\n  private token: string;\r\n  private isAuthenticated = false;\r\n  private expiresInDuration: number;\r\n  private authStatusListener = new Subject<boolean>();\r\n  private tokenTimer: any;\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n  getAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    this.clearAuthData();\r\n    clearTimeout(this.tokenTimer);\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  createUser(email: string, password: string) {\r\n    const authData: AuthData = {\r\n      email: email,\r\n      password: password\r\n    };\r\n    this.http\r\n      .post(\"http://localhost:3000/api/user/signup\", authData)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n      });\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const authData: AuthData = {\r\n      email: email,\r\n      password: password\r\n    };\r\n    this.http\r\n      .post<{ token: string; expiresIn: number }>(\r\n        \"http://localhost:3000/api/user/login\",\r\n        authData\r\n      )\r\n      .subscribe(result => {\r\n        const token = result.token;\r\n        this.token = token;\r\n        if (this.token) {\r\n          this.expiresInDuration = result.expiresIn;\r\n          this.tokenTimer = setTimeout(() => {\r\n            this.logout();\r\n          }, this.expiresInDuration * 1000);\r\n          this.isAuthenticated = true;\r\n          this.authStatusListener.next(true);\r\n          const now = new Date();\r\n          const expirationDate = new Date(\r\n            now.getTime() + this.expiresInDuration * 1000\r\n          );\r\n          this.saveAuthData(token, expirationDate);\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n      });\r\n  }\r\n  private saveAuthData(token: string, expirationDate: Date) {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiration\");\r\n  }\r\n\r\n  getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expirationDate = localStorage.getItem(\"expiration\");\r\n    if (!token || !expirationDate) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate)\r\n    };\r\n  }\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.tokenTimer = setTimeout(() => {\r\n        this.logout();\r\n      }, expiresIn);\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"mat-form-field,\\r\\ntextarea {\\r\\n  width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsWUFBWTs7Q0FFYiIsImZpbGUiOiJhcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsXHJcbnRleHRhcmVhIHtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbn1cclxuIl19 */\"","module.exports = \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"email\\\" placeholder=\\\"E-Mail\\\" name=\\\"email\\\" ngModel #emailInput=\\\"ngModel\\\" required email>\\r\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter Valid Email.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" ngModel #passwordInput=\\\"ngModel\\\"  required>\\r\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter password.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Login</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { AuthService } from \"../auth.service\";\r\n@Component({\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent {\r\n  isLoading = false;\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n}\r\n","module.exports = \"mat-form-field,\\r\\ntextarea {\\r\\n  width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxZQUFZOztDQUViIiwiZmlsZSI6ImFwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkLFxyXG50ZXh0YXJlYSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcblxyXG59XHJcbiJdfQ== */\"","module.exports = \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"email\\\" placeholder=\\\"E-Mail\\\" name=\\\"email\\\" ngModel #emailInput=\\\"ngModel\\\" required email>\\r\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter Valid Email.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" ngModel #passwordInput=\\\"ngModel\\\"  required>\\r\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter password.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Signup</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.css\"]\r\n})\r\nexport class SignupComponent {\r\n  isLoading = false;\r\n\r\n  constructor(private authservice: AuthService) {};\r\n  onSignup(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.authservice.createUser(form.value.email, form.value.password);\r\n  }\r\n}\r\n","module.exports = \"a{\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\nul{\\r\\n  list-style: none;\\r\\n  padding:0;\\r\\n  margin: 0;\\r\\n}\\r\\n.spacer\\r\\n{\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\nul{\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsYUFBYTtDQUNkO0FBQ0Q7RUFDRSxpQkFBaUI7RUFDakIsVUFBVTtFQUNWLFVBQVU7Q0FDWDtBQUNEOztFQUVFLGVBQWU7Q0FDaEI7QUFDRDtFQUNFLGNBQWM7Q0FDZiIsImZpbGUiOiJhcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYXtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbnVse1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzowO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG4uc3BhY2VyXHJcbntcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG51bHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n<span>\\r\\n  <a routerLink=\\\"/\\\" >\\r\\n  MyMessages\\r\\n</a>\\r\\n</span>\\r\\n<span class=\\\"spacer\\\"></span>\\r\\n<ul>\\r\\n  <li *ngIf=\\\"userIsAuthenticated\\\">\\r\\n    <a mat-button routerLink=\\\"/create\\\" routerLinkActive=\\\"mat-accent\\\" >New Post</a>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"!userIsAuthenticated\\\">\\r\\n    <a mat-button routerLink=\\\"/login\\\" routerLinkActive=\\\"mat-accent\\\" >Login</a>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"!userIsAuthenticated\\\">\\r\\n    <a mat-button routerLink=\\\"/signup\\\" routerLinkActive=\\\"mat-accent\\\" >Signup</a>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"userIsAuthenticated\\\">\\r\\n    <button mat-button (click)=\\\"onLogout()\\\">Logout</button>\\r\\n  </li>\\r\\n</ul>\\r\\n</mat-toolbar>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.css\"]\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  authListenerSubs: Subscription;\r\n  userIsAuthenticated = false;\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.getAuth();\r\n    this.authListenerSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      });\r\n  }\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { promise } from \"protractor\";\r\nimport { Observable, observable, Observer, of } from \"rxjs\";\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if(typeof(control.value)==='string')\r\n{\r\n  return of(null);\r\n}\r\n  const file = control.value as File;\r\n  const filereader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      filereader.addEventListener(\"loadend\", () => {\r\n        const arr = new Uint8Array(filereader.result as ArrayBuffer).subarray(\r\n          0,\r\n          4\r\n        );\r\n        let header = \"\";\r\n        let isvalid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case \"89504e47\":\r\n            isvalid = true;\r\n            break;\r\n          case \"ffd8ffe0\":\r\n          case \"ffd8ffe1\":\r\n          case \"ffd8ffe2\":\r\n          case \"ffd8ffe3\":\r\n          case \"ffd8ffe8\":\r\n            isvalid = true;\r\n            break;\r\n          default:\r\n            isvalid = false;\r\n            break;\r\n        }\r\n        if (isvalid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      filereader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","module.exports = \"mat-form-field,\\r\\ntextarea {\\r\\n  width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\ninput[type=\\\"file\\\"] {\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.image-preview {\\r\\n  height: 5rem;\\r\\n  margin: 1rem 0;\\r\\n}\\r\\n\\r\\n.image-preview img{\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9wb3N0cy9wb3N0LWNyZWF0ZS9wb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLFlBQVk7O0NBRWI7O0FBRUQ7RUFDRSxtQkFBbUI7Q0FDcEI7O0FBRUQ7RUFDRSxhQUFhO0VBQ2IsZUFBZTtDQUNoQjs7QUFFRDtFQUNFLGFBQWE7Q0FDZCIsImZpbGUiOiJhcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkLFxyXG50ZXh0YXJlYSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcblxyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG4uaW1hZ2UtcHJldmlldyB7XHJcbiAgaGVpZ2h0OiA1cmVtO1xyXG4gIG1hcmdpbjogMXJlbSAwO1xyXG59XHJcblxyXG4uaW1hZ2UtcHJldmlldyBpbWd7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onAddPost()\\\"  *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" name=\\\"title\\\" formControlName=\\\"title\\\" placeholder=\\\"Post Title\\\">\\r\\n      <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter the post title.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <button mat-stroked-button type=\\\"button\\\" (click)=\\\"filepicker.click()\\\">Pick Image</button>\\r\\n      <input type=\\\"file\\\" #filepicker (change)=\\\"onImagePicked($event)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview!='' && imagePreview && form.get('image').valid\\\">\\r\\n      <img [src]=\\\"imagePreview\\\" alt=\\\"form.value.title\\\">\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput name=\\\"post\\\" id=\\\"post\\\" cols=\\\"30\\\" rows=\\\"6\\\" name=\\\"content\\\" formControlName=\\\"content\\\"\\r\\n        placeholder=\\\"Post Content\\\"></textarea>\\r\\n      <mat-error *ngIf=\\\"form.get('content').invalid\\\">Please enter the post title.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">save post</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Post } from \"../post.model\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { PostService } from \"../post.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport { mimeType } from \"./mime-type.validator\";\r\n\r\n@Component({\r\n  selector: \"app-post-create\",\r\n  templateUrl: \"./post-create.component.html\",\r\n  styleUrls: [\"./post-create.component.css\"]\r\n})\r\nexport class PostCreateComponent implements OnInit {\r\n  enteredContent = \"\";\r\n  enteredtitle = \"\";\r\n  private mode = \"create\";\r\n  private postId: string;\r\n  post: Post;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n\r\n  onAddPost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.mode === \"create\") {\r\n      this.postService.addPost(\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    } else {\r\n      this.postService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)]\r\n      }),\r\n      content: new FormControl(null, { validators: [Validators.required] }),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n      })\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has(\"postId\")) {\r\n        this.mode = \"edit\";\r\n        this.postId = paramMap.get(\"postId\");\r\n        this.isLoading = true;\r\n        this.postService.getPost(this.postId).subscribe(postData => {\r\n          this.isLoading = false;\r\n          this.post = {\r\n            id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            imagePath:postData.imagePath\r\n          };\r\n          this.form.setValue({\r\n            title: this.post.title,\r\n            content: this.post.content,\r\n            image:this.post.imagePath\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = \"create\";\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get(\"image\").updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result as string;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  constructor(public postService: PostService, private route: ActivatedRoute) {}\r\n}\r\n","module.exports = \"<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length>0 && !isLoading\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      {{post.title}}\\r\\n    </mat-expansion-panel-header>\\r\\n    <div class=\\\"post-image\\\">\\r\\n      <img [src]=\\\"post.imagePath\\\" [alt]=\\\"post.title\\\">\\r\\n    </div>\\r\\n    <p>{{post.content }}</p>\\r\\n    <mat-action-row *ngIf=\\\"useIsAuthenticated\\\">\\r\\n      <button mat-button color=\\\"primary\\\" [routerLink]=\\\"['/edit',post.id]\\\">EDIT</button>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(post.id)\\\">DELETE</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<mat-paginator  [length]=\\\"totalPosts\\\" [pageSize]=\\\"postsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\" *ngIf=\\\"posts.length>0\\\"></mat-paginator>\\r\\n<p style=\\\"text-align: center\\\" class=\\\"mat-body-1\\\" *ngIf=\\\"posts.length==0 && !isLoading\\\">No posts added yet</p>\\r\\n\"","import { Component, Input, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { Post } from \"./../post.model\";\r\nimport { PostService } from \"../post.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { PageEvent } from \"@angular/material\";\r\nimport { AuthService } from \"src/app/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-post-list\",\r\n  templateUrl: \"./post-list.component.html\"\r\n})\r\nexport class PostListComponent implements OnInit, OnDestroy {\r\n  // posts = [\r\n  //   {title: 'first post', content: 'this is first post content'},\r\n  //   {title: 'second post', content: 'this is second post content'},\r\n  //   {title: 'third post', content: 'this is third post content'}\r\n  // ];\r\n  posts: Post[] = [];\r\n  private postSub: Subscription;\r\n  isLoading = false;\r\n  totalPosts = 10;\r\n  postsPerPage = 2;\r\n  currentPage = 1;\r\n  pageSizeOptions = [1, 2, 3, 5, 10];\r\n\r\n  useIsAuthenticated = false;\r\n\r\n  private authStatusListenerSubs: Subscription;\r\n\r\n  constructor(\r\n    public postService: PostService,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.postService.getPosts(this.postsPerPage, 1);\r\n    this.postSub = this.postService\r\n      .getPostUpdateListner()\r\n      .subscribe((postData: { posts: Post[]; postCount: number }) => {\r\n        this.isLoading = false;\r\n        this.totalPosts = postData.postCount;\r\n        this.posts = postData.posts;\r\n      });\r\n\r\n      this.useIsAuthenticated =  this.authService.getAuth();\r\n\r\n    this.authStatusListenerSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticates => {\r\n        this.useIsAuthenticated = isAuthenticates;\r\n      });\r\n  }\r\n  onDelete(id: string) {\r\n    this.isLoading = true;\r\n\r\n    this.postService.deletePost(id).subscribe(() => {\r\n      this.postService.getPosts(this.postsPerPage, this.currentPage);\r\n    });\r\n  }\r\n\r\n  onChangedPage(pageEvent: PageEvent) {\r\n    this.isLoading = true;\r\n    this.currentPage = pageEvent.pageIndex + 1;\r\n    this.postsPerPage = pageEvent.pageSize;\r\n    this.postService.getPosts(this.postsPerPage, this.currentPage);\r\n  }\r\n  ngOnDestroy() {\r\n    this.postSub.unsubscribe();\r\n  }\r\n}\r\n","import { Post } from \"./post.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/Operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class PostService {\r\n  private posts: Post[] = [];\r\n  private postUpdated = new Subject<{ posts: Post[]; postCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n  getPosts(postsPerPage: number, page: number) {\r\n    const queryParams = `?pagesize=${postsPerPage}&page=${page}`;\r\n    this.http\r\n      .get<{ message: String; posts: any[]; maxPosts: number }>(\r\n        \"http://localhost:3000/api/posts\" + queryParams\r\n      )\r\n      .pipe(\r\n        map(postData => {\r\n          return {\r\n            posts: postData.posts.map(post => {\r\n              return {\r\n                id: post._id,\r\n                title: post.title,\r\n                content: post.content,\r\n                imagePath: post.imagePath\r\n              };\r\n            }),\r\n            maxPosts: postData.maxPosts\r\n          };\r\n        })\r\n      )\r\n      .subscribe(transformedPosts => {\r\n        this.posts = transformedPosts.posts;\r\n        this.postUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformedPosts.maxPosts\r\n        });\r\n      });\r\n  }\r\n\r\n  getPostUpdateListner() {\r\n    return this.postUpdated.asObservable();\r\n  }\r\n\r\n  getPost(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      title: string;\r\n      content: string;\r\n      imagePath: string;\r\n    }>(\"http://localhost:3000/api/posts/\" + id);\r\n  }\r\n\r\n  addPost(title: string, content: string, image: File) {\r\n    const postData = new FormData();\r\n\r\n    postData.append(\"title\", title);\r\n    postData.append(\"content\", content);\r\n    postData.append(\"image\", image, title);\r\n    this.http\r\n      .post<{ message: string; post: Post }>(\r\n        \"http://localhost:3000/api/posts\",\r\n        postData\r\n      )\r\n      .subscribe(responseData => {\r\n        this.router.navigate([\"/\"]);\r\n      });\r\n  }\r\n\r\n  updatePost(id: string, title: string, content: string, image: File | string) {\r\n    let postData: Post | FormData;\r\n    if (typeof image === \"object\") {\r\n      postData = new FormData();\r\n      postData.append(\"id\", id);\r\n      postData.append(\"title\", title);\r\n      postData.append(\"content\", content);\r\n      postData.append(\"image\", image, title);\r\n    } else {\r\n      postData = {\r\n        id: id,\r\n        title: title,\r\n        content: content,\r\n        imagePath: image\r\n      };\r\n    }\r\n\r\n    this.http\r\n      .put<{ message: string; postId: string }>(\r\n        \"http://localhost:3000/api/posts/\" + id,\r\n        postData\r\n      )\r\n      .subscribe(responseData => {\r\n        this.router.navigate([\"/\"]);\r\n      });\r\n  }\r\n\r\n  deletePost(id: string) {\r\n    return this.http.delete(\"http://localhost:3000/api/posts/\" + id);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}